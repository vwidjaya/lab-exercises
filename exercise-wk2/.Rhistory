my.num <- 6
initials <- "V. W."
my.vector <- c(my.num, initials)
# run ?sum to get more info
vector.sum <- sum(my.vector)
sum('6', 'VW')
sum('v','w')
?sum
install.packages("stringr")
my.line <- "Hey, hey, this is the library"
print(str_length(my.line))
?str_length
??str_length
library stringr
print(str_length(my.line))
library(stringr)
print(str_length(my.line))
my.num <- 6
initials <- "V. W."
my.vector <- c(my.num, initials)
# run ?sum to get more info
vector.sum <- sum(my.vector)
install.packages("stringr")
install.packages("stringr")
my.line <- "Hey, hey, this is the library"
print(str_length(my.line))
said.the.famous <- paste(my.line, " - ", initial)
library(stringr)
print(str_length(my.line))
said.the.famous <- paste(my.line, " - ", initial)
said.the.famous <- paste(my.line, " - ", initial)
# Make a vector and use typeof to check what type R considers it to be
vector.part2 <- c(1:10)
typeof(vector.part2)
typeof(my.vector)
return(paste("The difference in lengths is", abs(length(vector1) - length(vector2)))
}
# Write a function `CompareLength` that takes in 2 vectors, and returns the sentence:
# "The difference in lengths is N"
CompareLength <- function(vector1, vector2) {
difference <- abs(length(vector1) - length(vector2))
return(paste("The difference in lengths is", difference))
}
# Pass two vectors of different length to your `CompareLength` function
length(c('vincent', 'widjaya'))
# Pass two vectors of different length to your `CompareLength` function
CompareLength(c(1:5), c('Vincent', 'Widjaya'))
# Write a function `DescribeDifference` that will return one of the following statements:
# "Your first vector is longer by N elements"
# "Your second vector is longer by N elements"
DescribeDifference <- function(vector1, vector2) {
difference <- length(vector1) - length(vector2)
longer <- "first"
if(difference < 0) {
longer <- "second"
}
return(paste("Your", longer, "vector is longer by", abs(difference), "elements"))
}
# Pass two vectors to your `DescribeDifference` function
DescribeDifference(c(1:5), c('Vincent', 'Widjaya'))
# Pass two vectors to your `DescribeDifference` function
DescribeDifference(c('Vincent', 'Widjaya'), c(1:5))
?c
# Send 3 vectors to your function to test it.
CombineVectors(c(1:3), c(4:6), c(7:9))
# Write a function `CombineVectors` that takes in 3 vectors and combines them into one
CombineVectors <- function(vector1, vector2, vector3) {
return(c(vector1, vector2, vector3))
}
# Send 3 vectors to your function to test it.
CombineVectors(c(1:3), c(4:6), c(7:9))
?isupper
?gsub
courses.vector[courses.vector[isLowercase]]
# Write a function `CapsTime` that takes in a vector of names of courses you're taking, ex "Informatics 201" and removes all capital letters
CapsTime <- function(courses.vector) {
courses.vector[courses.vector[isLowercase]]
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
# Write a function `CapsTime` that takes in a vector of names of courses you're taking, ex "Informatics 201" and removes all capital letters
CapsTime <- function(courses.vector) {
courses.vector[isLowercase(courses.vector)]
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
courses.vector[toUpper(courses.vector) == courses.vector]
courses.vector[toUpper(courses.vector) == courses.vector]
- function(courses.vector) {
courses.vector[toUpper(courses.vector) == courses.vector]
}
?toupper
?toupper
<- function(courses.vector) {
courses.vector[toUpper(courses.vector) == courses.vector]
}
toUpper(test.vector)
toupper(test.vector)
courses.vector[toupper(courses.vector) == courses.vector]
e <- function(courses.vector) {
courses.vector[toupper(courses.vector) == courses.vector]
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
View(e)
CapsTime <- function(courses.vector) {
courses.vector[toupper(courses.vector) == courses.vector]
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
CapsTime(test.vector)
CapsTime <- function(courses.vector) {
courses.vector = courses.vector[toupper(courses.vector) == courses.vector]
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
test.vector <- "VincenT RichiE WidjayA"
return(courses.vector[toupper(courses.vector) == courses.vector])
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
CapsTime <- function(courses.vector) {
return(courses.vector[toupper(courses.vector) == courses.vector])
}
test.vector <- "VincenT RichiE WidjayA"
CapsTime(test.vector)
test.vector[toupper(test.vector) == test.vector]
